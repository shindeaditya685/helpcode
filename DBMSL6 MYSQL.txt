-- Create tables with constraints

CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    employee_name VARCHAR(255) NOT NULL,
    street VARCHAR(255),
    city VARCHAR(255)
);

CREATE TABLE Works (
    employee_name VARCHAR(255),
    company_name VARCHAR(255),
    salary DECIMAL(10, 2),
    PRIMARY KEY (employee_name, company_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name)
);

CREATE TABLE Company (
    company_name VARCHAR(255) PRIMARY KEY,
    city VARCHAR(255)
);

CREATE TABLE Management (
    employee_name VARCHAR(255),
    manager_name VARCHAR(255),
    PRIMARY KEY (employee_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (manager_name) REFERENCES Employee(employee_name)
);

-- Queries

-- 1. Change the city of the employee working with InfoSys to 'Bangalore'.
UPDATE Employee
SET city = 'Bangalore'
WHERE employee_name IN (SELECT employee_name FROM Works WHERE company_name = 'InfoSys');

-- 2. Find the names of all employees who earn more than the average salary of all employees of their company. Assume that all people work for at most one company.
SELECT e.employee_name
FROM Employee e
JOIN Works w ON e.employee_name = w.employee_name
WHERE w.salary > (SELECT AVG(salary) FROM Works WHERE company_name = w.company_name);

-- 3. Find the names, street address, and cities of residence for all employees who work for 'TechM' and earn more than $10,000.
SELECT e.employee_name, e.street, e.city
FROM Employee e
JOIN Works w ON e.employee_name = w.employee_name
WHERE w.company_name = 'TechM' AND w.salary > 10000;

-- 4. Change the name of the table Manages to Management.
ALTER TABLE Manages RENAME TO Management;

-- 5. Create Simple and Unique index on the employee table.
CREATE INDEX idx_employee_name ON Employee(employee_name);
CREATE UNIQUE INDEX idx_emp_id ON Employee(emp_id);

-- 6. Display index information.
SHOW INDEX FROM Employee;
