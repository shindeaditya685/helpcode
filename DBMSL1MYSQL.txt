-- Create tables with constraints

CREATE TABLE Account (
    Acc_no INT PRIMARY KEY,
    branch_name VARCHAR(255) NOT NULL,
    balance DECIMAL(10, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Branch (
    branch_name VARCHAR(255) PRIMARY KEY,
    branch_city VARCHAR(255),
    assets DECIMAL(12, 2)
);

CREATE TABLE Customer (
    cust_name VARCHAR(255) PRIMARY KEY,
    cust_street VARCHAR(255),
    cust_city VARCHAR(255)
);

CREATE TABLE Depositor (
    cust_name VARCHAR(255),
    acc_no INT,
    PRIMARY KEY (cust_name, acc_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (acc_no) REFERENCES Account(Acc_no)
);

CREATE TABLE Loan (
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(255),
    amount DECIMAL(10, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Borrower (
    cust_name VARCHAR(255),
    loan_no INT,
    PRIMARY KEY (cust_name, loan_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);

-- Queries

-- 1. Find the names of all branches in loan relation.
SELECT DISTINCT branch_name FROM Loan;

-- 2. Find all loan numbers for loans made at „Wadia College‟ Branch with loan amount > 12000.
SELECT loan_no FROM Loan WHERE branch_name = 'Wadia College' AND amount > 12000;

-- 3. Find all customers who have a loan from the bank. Find their names, loan_no, and loan amount.
SELECT c.cust_name, b.loan_no, l.amount
FROM Customer c
JOIN Borrower b ON c.cust_name = b.cust_name
JOIN Loan l ON b.loan_no = l.loan_no;

-- 4. List all customers in alphabetical order who have a loan from „Wadia College‟ branch.
SELECT c.cust_name
FROM Customer c
JOIN Borrower b ON c.cust_name = b.cust_name
JOIN Loan l ON b.loan_no = l.loan_no
WHERE l.branch_name = 'Wadia College'
ORDER BY c.cust_name;

-- 5. Display distinct cities of the branch.
SELECT DISTINCT branch_city FROM Branch;



INPUT

-- Insert values into the Account table
INSERT INTO Account (Acc_no, branch_name, balance) VALUES
(1, 'Branch1', 5000.00),
(2, 'Branch2', 8000.00),
(3, 'Branch3', 12000.00);

-- Insert values into the Branch table
INSERT INTO Branch (branch_name, branch_city, assets) VALUES
('Branch1', 'City1', 100000.00),
('Branch2', 'City2', 150000.00),
('Branch3', 'City3', 200000.00);

-- Insert values into the Customer table
INSERT INTO Customer (cust_name, cust_street, cust_city) VALUES
('Customer1', 'Street1', 'City1'),
('Customer2', 'Street2', 'City2'),
('Customer3', 'Street3', 'City3');

-- Insert values into the Depositor table
INSERT INTO Depositor (cust_name, acc_no) VALUES
('Customer1', 1),
('Customer2', 2),
('Customer3', 3);

-- Insert values into the Loan table
INSERT INTO Loan (loan_no, branch_name, amount) VALUES
(101, 'Branch1', 15000.00),
(102, 'Branch2', 18000.00),
(103, 'Branch3', 22000.00);

-- Insert values into the Borrower table
INSERT INTO Borrower (cust_name, loan_no) VALUES
('Customer1', 101),
('Customer2', 102),
('Customer3', 103);
