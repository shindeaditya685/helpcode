-- Create tables with constraints

CREATE TABLE CUSTOMERS (
    CNo INT PRIMARY KEY,
    Cname VARCHAR(255) NOT NULL,
    Ccity VARCHAR(255),
    CMobile VARCHAR(15) UNIQUE NOT NULL
);

CREATE TABLE ITEMS (
    INo INT PRIMARY KEY,
    Iname VARCHAR(255) NOT NULL,
    Itype VARCHAR(255),
    Iprice DECIMAL(10, 2) NOT NULL,
    Icount INT
);

CREATE TABLE PURCHASE (
    PNo INT PRIMARY KEY,
    Pdate DATE,
    Pquantity INT,
    Cno INT,
    INo INT,
    FOREIGN KEY (Cno) REFERENCES CUSTOMERS(CNo),
    FOREIGN KEY (INo) REFERENCES ITEMS(INo)
);

-- Insert data

-- You can insert data into the tables as per your requirements.

-- Queries

-- 1. List all stationary items with a price between 400/- to 1000/-
SELECT * FROM ITEMS WHERE Itype = 'Stationary' AND Iprice BETWEEN 400 AND 1000;

-- 2. Change the mobile number of customer “Gopal”
UPDATE CUSTOMERS SET CMobile = 'NewMobileNumber' WHERE Cname = 'Gopal';

-- 3. Display the item with the maximum price
SELECT * FROM ITEMS ORDER BY Iprice DESC LIMIT 1;

-- 4. Display all purchases sorted from the most recent to the oldest
SELECT * FROM PURCHASE ORDER BY Pdate DESC;

-- 5. Count the number of customers in every city
SELECT Ccity, COUNT(*) AS num_customers FROM CUSTOMERS GROUP BY Ccity;

-- 6. Display all purchased quantities of Customer Maya
SELECT Cname, SUM(Pquantity) AS total_quantity
FROM CUSTOMERS
JOIN PURCHASE ON CUSTOMERS.CNo = PURCHASE.Cno
WHERE Cname = 'Maya'
GROUP BY Cname;

-- 7. Create a view which shows Iname, Price, and Count of all stationary items in descending order of price.
CREATE VIEW StationaryView AS
SELECT Iname, Iprice, Icount
FROM ITEMS
WHERE Itype = 'Stationary'
ORDER BY Iprice DESC;

-- Display content of the view
SELECT * FROM StationaryView;
